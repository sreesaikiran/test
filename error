val dynamoUpdateRequest = if (openHomes.nonEmpty) {
  val openHomesHash = calculateOpenHomesHash(openHomes)
  new UpdateItemRequest()
    .withTableName("mdp-mls-listing-ids-dev")
    .withKey(Map("mls_listing_id" -> new AttributeValue(row.getAs[String]("_id"))).asJava)
    .withUpdateExpression(
      """SET open_homes = :openHomes, 
        |open_homes.hash_code = :hashCode, 
        |open_homes.is_open_homes = :isOpenHomes, 
        |mls_listing_data.last_change_date = :lastChangeDate""".stripMargin
    )
    .withExpressionAttributeValues(Map(
      ":openHomes" -> new AttributeValue().withL(
        openHomes.map { openHome =>
          new AttributeValue().withM(
            openHome.schema.fieldNames.map { fieldName =>
              fieldName -> new AttributeValue(openHome.getAs[Any](fieldName).toString)
            }.toMap.asJava
          )
        }.asJava
      ),
      ":hashCode" -> new AttributeValue().withN(openHomesHash.toString),
      ":isOpenHomes" -> new AttributeValue().withBOOL(true),
      ":lastChangeDate" -> new AttributeValue().withN(nowMillis.toString)
    ).asJava)
} else {
  new UpdateItemRequest()
    .withTableName("mdp-mls-listing-ids-dev")
    .withKey(Map("mls_listing_id" -> new AttributeValue(row.getAs[String]("_id"))).asJava)
    .withUpdateExpression(
      """SET open_homes = :openHomes, 
        |open_homes.hash_code = :hashCode, 
        |open_homes.is_open_homes = :isOpenHomes, 
        |mls_listing_data.last_change_date = :lastChangeDate""".stripMargin
    )
    .withExpressionAttributeValues(Map(
      ":openHomes" -> new AttributeValue().withL(new java.util.ArrayList[AttributeValue]()),
      ":hashCode" -> new AttributeValue().withN("0"),
      ":isOpenHomes" -> new AttributeValue().withBOOL(false),
      ":lastChangeDate" -> new AttributeValue().withN(nowMillis.toString)
    ).asJava)
}
