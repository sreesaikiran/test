import com.amazonaws.services.dynamodbv2.AmazonDynamoDBClientBuilder
import com.amazonaws.services.dynamodbv2.document.{DynamoDB, Item}
import play.api.libs.json._

object DynamoDBJsonInsertPlay extends App {

  // Initialize the DynamoDB client
  val dynamoDBClient = AmazonDynamoDBClientBuilder.standard().build()
  val dynamoDB = new DynamoDB(dynamoDBClient)

  // Replace with your DynamoDB table name
  val tableName = "YourTableName"
  val table = dynamoDB.getTable(tableName)

  // Example JSON data
  val jsonData =
    """
      |{
      |  "id": "123",
      |  "name": "John Doe",
      |  "age": 30,
      |  "address": {
      |    "street": "123 Main St",
      |    "city": "New York",
      |    "state": "NY"
      |  },
      |  "isActive": true
      |}
    """.stripMargin

  // Parse JSON using Play JSON
  val json: JsValue = Json.parse(jsonData)

  try {
    // Convert JsValue to a Scala Map
    val jsonMap: Map[String, Any] = json.as[Map[String, JsValue]].mapValues {
      case JsString(value) => value
      case JsNumber(value) => value.toDouble
      case JsBoolean(value) => value
      case JsObject(fields) => fields.mapValues(_.toString).toMap
      case JsArray(values) => values.map(_.toString).toList
      case JsNull => null
      case _ => throw new IllegalArgumentException("Unsupported JSON type")
    }

    // Create an Item and insert it into DynamoDB
    val item = new Item().withPrimaryKey("id", jsonMap("id")).withMap("data", jsonMap.asJava)
    table.putItem(item)
    println("Item inserted successfully!")
  } catch {
    case e: Exception =>
      println(s"Error inserting item: ${e.getMessage}")
  }
}
